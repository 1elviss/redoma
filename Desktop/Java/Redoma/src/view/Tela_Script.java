/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import bean.IndicesClusterNaoVariantes;
import bean.IndicesCluster;
import bean.IndicesNaoUtilizados;
import bean.MaioresIndices;
import bean.IndicesFillFactor;
import bean.TabelasHeap;
import util.ConnectionFactory;

/**
 *
 * @author aldam
 */
public class Tela_Script extends javax.swing.JFrame {

    public static Connection conection;
    public static List<String> selectedBancos;
    private List<Object> listaComTodosSelects = new ArrayList<>();

    public List<Object> getListaComTodosSelects() {
        return listaComTodosSelects;
    }

    public void setListaComTodosSelects(List<Object> listaComTodosSelects) {
        this.listaComTodosSelects = listaComTodosSelects;
    }

    private String idBanco;

    private String getIdBanco() {
        return idBanco;
    }

    /**
     * Creates new form Tela_Data_Base
     */
    public Tela_Script(Connection conection) {
        this.conection = conection;
        this.selectedBancos = selectedBancos;
        this.idBanco = selectedBancos.get(0);
        initComponents();
    }

    public Tela_Script(Connection novaConexao, List<String> opcoesSelected) {
        initComponents();
    }

    private Tela_Data_Base telaDataBase;
    private Tela_Resumo telaResumo;

    public Tela_Data_Base getTelaDataBase() {
        return telaDataBase;
    }

    public void setTelaDataBase(Tela_Data_Base telaDataBase) {
        this.telaDataBase = telaDataBase;
    }

    public Tela_Resumo getTelaResumo() {
        return telaResumo;
    }

    public void setTelaResumo(Tela_Resumo telaResumo) {
        this.telaResumo = telaResumo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        jScrollBar1 = new javax.swing.JScrollBar();
        jLabelOpcaoPermissao = new javax.swing.JLabel();
        jLabelOpcaoIndex = new javax.swing.JLabel();
        jCheckBoxPermissaoSA = new javax.swing.JCheckBox();
        jCheckBoxPermisssaoEscrita = new javax.swing.JCheckBox();
        jCBoxFragNaoCluster = new javax.swing.JCheckBox();
        jCBoxFragCluster = new javax.swing.JCheckBox();
        jCBoxFillFactor = new javax.swing.JCheckBox();
        jCBoxIndiceNaoUtilizado = new javax.swing.JCheckBox();
        jCBox10_MaiorIndice = new javax.swing.JCheckBox();
        jCBoxTableHeap = new javax.swing.JCheckBox();
        jCBoxIndexClusterTipoVariavel = new javax.swing.JCheckBox();
        jCBoxGroupPrymary = new javax.swing.JCheckBox();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jTexFnaoCluster = new javax.swing.JTextField();
        jTextFcluster = new javax.swing.JTextField();
        jTextFillFactor = new javax.swing.JTextField();
        jPanelFuncao = new javax.swing.JPanel();
        jBtVoltar = new javax.swing.JButton();
        jBtAvançar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtAjuda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Opções de Script");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione as opções abaixo"));

        jScrollBar1.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        jScrollBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelOpcaoPermissao.setText("Opções de Permissionamento:");

        jLabelOpcaoIndex.setText("Opções de Indexação");

        jCheckBoxPermissaoSA.setText("Usuários com permissão de SA");

        jCheckBoxPermisssaoEscrita.setText("Usuários com permissão de escrita");

        jCBoxFragNaoCluster.setText("Indeces com fragmentação não clusterizado");
        jCBoxFragNaoCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxFragNaoClusterActionPerformed(evt);
            }
        });

        jCBoxFragCluster.setText("Indeces com fragmentação clusterizado");
        jCBoxFragCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxFragClusterActionPerformed(evt);
            }
        });

        jCBoxFillFactor.setText("Índices com Fillfactor menor ");
        jCBoxFillFactor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxFillFactorActionPerformed(evt);
            }
        });

        jCBoxIndiceNaoUtilizado.setText("Índices não utilizados");
        jCBoxIndiceNaoUtilizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxIndiceNaoUtilizadoActionPerformed(evt);
            }
        });

        jCBox10_MaiorIndice.setText("Os top 10 - maiores indices");
        jCBox10_MaiorIndice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBox10_MaiorIndiceActionPerformed(evt);
            }
        });

        jCBoxTableHeap.setText(" Tabelas heap");
        jCBoxTableHeap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxTableHeapActionPerformed(evt);
            }
        });

        jCBoxIndexClusterTipoVariavel.setText("Índices clusterizados com tipos de dados variantes");
        jCBoxIndexClusterTipoVariavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxIndexClusterTipoVariavelActionPerformed(evt);
            }
        });

        jCBoxGroupPrymary.setText("Índices localizado no Filegroup PRIMARY");
        jCBoxGroupPrymary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxGroupPrymaryActionPerformed(evt);
            }
        });

        jSlider1.setMajorTickSpacing(5);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setValue(0);

        jSlider2.setMajorTickSpacing(5);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);
        jSlider2.setValue(0);

        jSlider3.setMajorTickSpacing(5);
        jSlider3.setPaintLabels(true);
        jSlider3.setPaintTicks(true);
        jSlider3.setValue(0);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jSlider3, org.jdesktop.beansbinding.ELProperty.create("${value}"), jTexFnaoCluster, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jSlider2, org.jdesktop.beansbinding.ELProperty.create("${value}"), jTextFcluster, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFillFactor.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSlider3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCBox10_MaiorIndice)
                                    .addComponent(jCheckBoxPermisssaoEscrita)
                                    .addComponent(jLabelOpcaoPermissao)
                                    .addComponent(jCheckBoxPermissaoSA)
                                    .addComponent(jCBoxTableHeap)
                                    .addComponent(jCBoxIndiceNaoUtilizado)
                                    .addComponent(jLabelOpcaoIndex)
                                    .addComponent(jCBoxIndexClusterTipoVariavel)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jCBoxFragNaoCluster)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTexFnaoCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jCBoxFillFactor)
                                        .addGap(82, 82, 82)
                                        .addComponent(jTextFillFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(68, 68, 68))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCBoxGroupPrymary)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCBoxFragCluster)
                                .addGap(29, 29, 29)
                                .addComponent(jTextFcluster, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabelOpcaoPermissao)
                .addGap(21, 21, 21)
                .addComponent(jCheckBoxPermissaoSA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxPermisssaoEscrita)
                .addGap(26, 26, 26)
                .addComponent(jLabelOpcaoIndex)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBoxFragNaoCluster)
                            .addComponent(jTexFnaoCluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBoxFragCluster, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFcluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBoxFillFactor))
                    .addComponent(jTextFillFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCBoxIndiceNaoUtilizado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBox10_MaiorIndice)
                .addGap(1, 1, 1)
                .addComponent(jCBoxGroupPrymary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBoxIndexClusterTipoVariavel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCBoxTableHeap)
                .addGap(18, 18, 18)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelFuncao.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jBtVoltar.setText("<< Voltar ");
        jBtVoltar.setPreferredSize(new java.awt.Dimension(100, 30));
        jBtVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtVoltarActionPerformed(evt);
            }
        });
        jPanelFuncao.add(jBtVoltar);

        jBtAvançar.setText("Avançar >>");
        jBtAvançar.setPreferredSize(new java.awt.Dimension(100, 30));
        jBtAvançar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAvançarActionPerformed(evt);
            }
        });
        jPanelFuncao.add(jBtAvançar);

        jBtCancelar.setText("Cancelar");
        jBtCancelar.setPreferredSize(new java.awt.Dimension(100, 30));
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });
        jPanelFuncao.add(jBtCancelar);

        jBtAjuda.setText("Ajuda");
        jBtAjuda.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanelFuncao.add(jBtAjuda);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelFuncao, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtVoltarActionPerformed(java.awt.event.ActionEvent evt) {
        if (conection != null) {
            BasesDinamicas tdb = new BasesDinamicas(conection);
            tdb.setVisible(true);
            this.dispose();
        }
    }

    private void jBtAvançarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAvançarActionPerformed
        if (jCBoxFragNaoCluster.isSelected()) {
            jCBoxFragNaoClusterActionPerformed(evt);
        }
        if (jCBoxFragCluster.isSelected()) {
            jCBoxFragClusterActionPerformed(evt);
        }
        if (jCBoxFillFactor.isSelected()) {
            jCBoxFillFactorActionPerformed(evt);
        }
        if (jCBox10_MaiorIndice.isSelected()) {
            jCBox10_MaiorIndiceActionPerformed(evt);
        }
        if (jCBoxGroupPrymary.isSelected()) {
            jCBoxGroupPrymaryActionPerformed(evt);
        }
        if (jCBoxIndexClusterTipoVariavel.isSelected()) {
            jCBoxIndexClusterTipoVariavelActionPerformed(evt);
        }
        if (jCBoxTableHeap.isSelected()) {
            jCBoxTableHeapActionPerformed(evt);
        }

        if (getTelaResumo() == null) {//nao foi ainda para outra tela
            //cria nova instancia
            //passando esta tela como parametro

            setTelaResumo(new Tela_Resumo(getListaComTodosSelects()));
            //a tela script agora conhece esta tela caso ela precise voltar
            //guardando o caminho de volta
            getTelaResumo().setTelaScript(this);
        }
        getTelaResumo().setListacomlistaComTodosSelects(getListaComTodosSelects());
        //ja passou pela 3 tela e voltou pra essa
        this.getTelaResumo().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBtAvançarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja Realmente Sair ?");
        if (resposta == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jCBoxFragNaoClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxFragNaoClusterActionPerformed
        List<String> listaResultSetString = new ArrayList<>();
        //pegando a conexao com o banco    
        String selectNaoVariantes = "SELECT distinct\n"
                + "                clmns.column_id AS id,\n"
                + "                clmns.name AS name,\n"
                + "                ISNULL(baset.name, N'') AS systemType,\n"
                + "                ik.type_desc as descricao\n"
                + "                FROM information_schema.tables,\n"
                + "                sys.tables AS tbl\n"
                + "                INNER JOIN sys.all_columns AS clmns ON clmns.object_id=tbl.object_id\n"
                + "                LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1))\n"
                + "                LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id\n"
                + "                LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column\n"
                + "	         WHERE table_type = 'base table' \n"
                + "                and ik.type = 1\n"
                + "                and baset.name in ('nchar','ntext','nvarchar','sql_variant','text','varbinary','varchar')\n"
                + "                ORDER BY\n"
                + "                id ASC;";

        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            stmt = conection.prepareStatement(selectNaoVariantes);
            rs = stmt.executeQuery();

            IndicesClusterNaoVariantes icnv = new IndicesClusterNaoVariantes();
            listaResultSetString.add(icnv.nomedoSelect());
            //adicionando o cabeÃ§aho da tabela no array de String posicao get(0)
            listaResultSetString.add(icnv.cabecalho());
            System.out.println(icnv.cabecalho());
            while (rs.next()) {//enquanto houver prÃ³ximo;
                icnv.setId(rs.getInt("id"));
                icnv.setName(rs.getString("name"));
                icnv.setSystemType(rs.getString("systemType"));
                icnv.setDescricao(rs.getString("descricao"));

                System.out.println(icnv.toString());
                //adicionando o corpo da tabela no array de String
                listaResultSetString.add(icnv.toString());
            }
        } catch (SQLException ex) {
            System.err.println("Erro :" + ex);
        } finally {
            ConnectionFactory.fecharStmtERs(stmt, rs);
        }
        //adicionando o resultado do select ao listaComTodosSelects
        getListaComTodosSelects().add(listaResultSetString);
    }//GEN-LAST:event_jCBoxFragNaoClusterActionPerformed

    private void jCBoxFragClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxFragClusterActionPerformed
        List<String> listaResultSetString = new ArrayList<>();
        //pegando a conexao com o banco    
        String selectNaoVariantes = "SELECT distinct\n"
                + "                clmns.column_id AS id,\n"
                + "                clmns.name AS name,\n"
                + "                ISNULL(baset.name, N'') AS systemType,\n"
                + "                ik.type_desc as descricao\n"
                + "                FROM information_schema.tables,\n"
                + "                sys.tables AS tbl\n"
                + "                INNER JOIN sys.all_columns AS clmns ON clmns.object_id=tbl.object_id\n"
                + "                LEFT OUTER JOIN sys.types AS baset ON (baset.user_type_id = clmns.system_type_id and baset.user_type_id = baset.system_type_id) or ((baset.system_type_id = clmns.system_type_id) and (baset.user_type_id = clmns.user_type_id) and (baset.is_user_defined = 0) and (baset.is_assembly_type = 1))\n"
                + "                LEFT OUTER JOIN sys.indexes AS ik ON ik.object_id = clmns.object_id\n"
                + "                LEFT OUTER JOIN sys.index_columns AS cik ON cik.index_id = ik.index_id and cik.column_id = clmns.column_id and cik.object_id = clmns.object_id and 0 = cik.is_included_column\n"
                + "	           WHERE table_type = 'base table' \n"
                + "                and ik.type = 1\n"
                + "                and SisTabelas.is_ms_shipped =  > 1 and index_type_desc = 'CLUSTERED INDEX'\n"
                + "                and baset.name in ('nchar','ntext','nvarchar','sql_variant','text','varbinary','varchar')\n"
                + "                ORDER BY\n"
                + "                id ASC;";
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            stmt = conection.prepareStatement(selectNaoVariantes);
            rs = stmt.executeQuery();

            IndicesCluster ic = new IndicesCluster();
            listaResultSetString.add(ic.nomedoSelect());
            //adicionando o cabeÃ§aho da tabela no array de String posicao get(0)
            listaResultSetString.add(ic.cabecalho());
            System.out.println(ic.cabecalho());
            while (rs.next()) {//enquanto houver prÃ³ximo;
                ic.setId(rs.getInt("id"));
                ic.setName(rs.getString("name"));
                ic.setSystemType(rs.getString("systemType"));
                ic.setDescricao(rs.getString("descricao"));

                System.out.println(ic.toString());
                //adicionando o corpo da tabela no array de String
                listaResultSetString.add(ic.toString());
            }
        } catch (SQLException ex) {
            System.err.println("Erro :" + ex);
        } finally {
            ConnectionFactory.fecharStmtERs(stmt, rs);
        }
        //adicionando o resultado do select ao listaComTodosSelects
        getListaComTodosSelects().add(listaResultSetString);
    }//GEN-LAST:event_jCBoxFragClusterActionPerformed

    private void jCBoxFillFactorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxFillFactorActionPerformed
        List<String> listaResultSetString = new ArrayList<>();
        //pegando a conexao com o banco    
        if (jCBoxFillFactor.isSelected()) {
            int parametroFill = Integer.parseInt(jTextFillFactor.getText());
            String selectFill = "SELECT DB_NAME() AS DBNAME, a.name AS IndexName, \n"
                    + " a.OrigFillFactor AS Fill_Factor, b.table_name\n"
                    + "FROM sysindexes AS a\n"
                    + "INNER JOIN information_schema.tables AS b \n"
                    + " ON (OBJECT_ID(b.table_name) = a.id) \n"
                    + " AND b.table_type = 'BASE TABLE'\n"
                    + "WHERE a.OrigFillFactor < " + parametroFill + "\n"
                    + "ORDER BY a.OrigFillFactor DESC";

            PreparedStatement stmt = null;
            ResultSet rs = null;
            try {
                stmt = conection.prepareStatement(selectFill);
                rs = stmt.executeQuery();

                IndicesFillFactor iff = new IndicesFillFactor();
                listaResultSetString.add(iff.nomedoSelect());
                //adicionando o cabeÃ§aho da tabela no array de String posicao get(0)
                listaResultSetString.add(iff.cabecalho());
                System.out.println(iff.cabecalho());
                while (rs.next()) {//enquanto houver prÃ³ximo;

                    iff.setNomeDoBanco(rs.getString("nomeDoBanco"));
                    iff.setNomeDoIndice(rs.getString("nomeDoIndice"));
                    iff.setFillFactor(rs.getInt("fill_Factor"));
                    iff.setNomeDaTabela(rs.getString("nomeDaTabela"));

                    System.out.println(iff.toString());
                    //adicionando o corpo da tabela no array de String
                    listaResultSetString.add(iff.toString());
                }
            } catch (SQLException ex) {
                System.err.println("Erro :" + ex);
            } finally {
                ConnectionFactory.fecharStmtERs(stmt, rs);
            }
            //adicionando o resultado do select ao listaComTodosSelects
            getListaComTodosSelects().add(listaResultSetString);
        }
    }//GEN-LAST:event_jCBoxFillFactorActionPerformed

    private void jCBoxIndiceNaoUtilizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxIndiceNaoUtilizadoActionPerformed
        List<String> listaResultSetString = new ArrayList<>();
        //pegando a conexao com o banco    
        String selectidxNaoU = "SELECT  OBJECT_NAME(i.[object_id]) AS nomeDaTabela ,\n"
                + "                     i.name as nomeDoIndice\n"
                + "                FROM    sys.indexes AS i\n"
                + "                       INNER JOIN sys.objects AS o ON i.[object_id] = o.[object_id]\n"
                + "                WHERE   i.index_id NOT IN ( SELECT  s.index_id\n"
                + "                                            FROM    sys.dm_db_index_usage_stats AS s\n"
                + "                                        WHERE   s.[object_id] = i.[object_id]\n"
                + "                                                  AND i.index_id = s.index_id\n"
                + "                                                 AND database_id = DB_ID() )\n"
                + "                      AND o.[type] = 'U'\n"
                + "                ORDER BY OBJECT_NAME(i.[object_id]) ASC";

        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            stmt = conection.prepareStatement(selectidxNaoU);
            rs = stmt.executeQuery();

            IndicesNaoUtilizados idxNaoUtilizados = new IndicesNaoUtilizados();

            listaResultSetString.add(idxNaoUtilizados.nomedoSelect());
            //adicionando o cabeÃ§aho da tabela no array de String posicao get(0)
            listaResultSetString.add(idxNaoUtilizados.cabecalho());
            System.out.println(idxNaoUtilizados.cabecalho());
            while (rs.next()) {//enquanto houver prÃ³ximo;
                idxNaoUtilizados.setNomeDaTabela(rs.getString("nomeDaTabela"));
                idxNaoUtilizados.setNomeDoIndice(rs.getString("nomeDoIndice"));
                System.out.println(idxNaoUtilizados.toString());
                //adicionando o corpo da tabela no array de String
                listaResultSetString.add(idxNaoUtilizados.toString());
            }
        } catch (SQLException ex) {
            System.err.println("Erro :" + ex);
        } finally {
            ConnectionFactory.fecharStmtERs(stmt, rs);
        }
        //adicionando o resultado do select ao listaComTodosSelects

        getListaComTodosSelects().add(listaResultSetString);
    }//GEN-LAST:event_jCBoxIndiceNaoUtilizadoActionPerformed

    private void jCBox10_MaiorIndiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBox10_MaiorIndiceActionPerformed
        List<String> listaResultSetString = new ArrayList<>();
        String selectTop10 = "select TOP (10) object_id as idDoObjeto,\n"
                + "                index_type_desc as descricaoDoIndice,\n"
                + "                avg_fragmentation_in_percent as fragmentacao\n"
                + "                from sys.dm_db_index_physical_stats (   \n"
                + "                " + this.getIdBanco() + "\n"
                + "                 , null\n"
                + "                , null\n"
                + "                 , null\n"
                + "                  , null\n"
                + "                ) \n"
                + "                where avg_fragmentation_in_percent >= 0 and\n"
                + "                index_id > 0\n"
                + "                order by avg_fragmentation_in_percent desc";

        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            stmt = conection.prepareStatement(selectTop10);
            rs = stmt.executeQuery();
            //para percorrer o resultSet
            MaioresIndices mi = new MaioresIndices();
            listaResultSetString.add(mi.nomedoSelect());
            //adicionando o cabeÃ§aho da tabela no array de String posicao get(0)
            listaResultSetString.add(mi.cabecalho());
            while (rs.next()) {//enquanto houver prÃ³ximo;
                mi.setIdDoObjeto(rs.getLong("idDoObjeto"));
                mi.setDescricaoDoIndice(rs.getString("descricaoDoIndice"));
                mi.setFragmentacao(rs.getDouble("fragmentacao"));

                System.out.println(mi.toString());
                //adicionando o corpo da tabela no array de String
                listaResultSetString.add(mi.toString());
            }
        } catch (SQLException ex) {
            System.err.println("Erro :" + ex);
        } finally {
            ConnectionFactory.fecharStmtERs(stmt, rs);
        }
        getListaComTodosSelects().add(listaResultSetString);
    }//GEN-LAST:event_jCBox10_MaiorIndiceActionPerformed

    private void jCBoxGroupPrymaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxGroupPrymaryActionPerformed
        List<String> listaResultSetString = new ArrayList<>();
        if (jCBoxGroupPrymary.isSelected()) {
            String selectFG = " Select    OBJECT_NAME(i.object_id) As Tabela,\n"
                    + "i.name As Indice, \n"
                    + "i.object_id IddoObjetoIndice,\n"
                    + "fg.name as GrupoDeARQUIVO,\n"
                    + "i.type_desc as TipoDeIndice,\n"
                    + "o.type as TipoTabela\n"
                    + "from sys.indexes as i \n"
                    + "inner join sys.data_spaces AS ds ON i.data_space_id = ds.data_space_id\n"
                    + "inner join sys.filegroups as fg on fg.data_space_id = ds.data_space_id\n"
                    + "inner join sys.objects as o on o.object_id = i.object_id\n"
                    + "where (o.type ='U') and (fg.filegroup_guid IS NULL) and (OBJECT_NAME(i.object_id) <> 'sysdiagrams')";
        }
    }//GEN-LAST:event_jCBoxGroupPrymaryActionPerformed

    private void jCBoxIndexClusterTipoVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxIndexClusterTipoVariavelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBoxIndexClusterTipoVariavelActionPerformed

    private void jCBoxTableHeapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxTableHeapActionPerformed
        List<String> listaResultSetString = new ArrayList<>();
        //pegando a conexao com o banco    
        String selectHeap = "SELECT DISTINCT i.name as  NomeIndice\n"
                + "                     , i.type_desc as Descricao\n"
                + "                     ,is_unique as chaveUnica\n"
                + "                   ,is_primary_key as chavePrimaria\n"
                + "                     FROM sys.indexes AS i\n"
                + "                INNER JOIN sys.data_spaces AS ds ON i.data_space_id = ds.data_space_id\n"
                + "                inner join sys.filegroups as fg on fg.data_space_id = ds.data_space_id \n"
                + "                inner join sys.objects as o on o.object_id = i.object_id\n"
                + "                inner join sys.master_files as smf on smf.data_space_id = ds.data_space_id\n"
                + "                inner join sys.databases as db on db.database_id = smf.database_id\n"
                + "                INNER JOIN information_schema.tables AS b\n"
                + "                 ON (OBJECT_ID(b.table_name) = i.object_id) \n"
                + "               AND b.table_type = 'BASE TABLE'\n"
                + "                WHERE is_hypothetical = 0 AND i.index_id<> 0";

        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            stmt = conection.prepareStatement(selectHeap);
            rs = stmt.executeQuery();

            TabelasHeap sHeap = new TabelasHeap();
            listaResultSetString.add(sHeap.nomedoSelect());
            //adicionando o cabeÃ§aho da tabela no array de String posicao get(0)
            listaResultSetString.add(sHeap.cabecalho());
            System.out.println(sHeap.cabecalho());
            while (rs.next()) {//enquanto houver prÃ³ximo;
                sHeap.setNomeIndice(rs.getString("NomeIndice"));
                sHeap.setDescricao(rs.getString("Descricao"));
                sHeap.setChaveUnica(rs.getInt("chaveUnica"));
                sHeap.setChavePrimaria(rs.getInt("chavePrimaria"));

                System.out.println(sHeap.toString());
                //adicionando o corpo da tabela no array de String
                listaResultSetString.add(sHeap.toString());
            }
        } catch (SQLException ex) {
            System.err.println("Erro :" + ex);
        } finally {
            ConnectionFactory.fecharStmtERs(stmt, rs);
        }
        //adicionando o resultado do select ao listaComTodosSelects
        getListaComTodosSelects().add(listaResultSetString);
    }//GEN-LAST:event_jCBoxTableHeapActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Script(conection).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAjuda;
    private javax.swing.JButton jBtAvançar;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtVoltar;
    private javax.swing.JCheckBox jCBox10_MaiorIndice;
    private javax.swing.JCheckBox jCBoxFillFactor;
    private javax.swing.JCheckBox jCBoxFragCluster;
    private javax.swing.JCheckBox jCBoxFragNaoCluster;
    private javax.swing.JCheckBox jCBoxGroupPrymary;
    private javax.swing.JCheckBox jCBoxIndexClusterTipoVariavel;
    private javax.swing.JCheckBox jCBoxIndiceNaoUtilizado;
    private javax.swing.JCheckBox jCBoxTableHeap;
    private javax.swing.JCheckBox jCheckBoxPermissaoSA;
    private javax.swing.JCheckBox jCheckBoxPermisssaoEscrita;
    private javax.swing.JLabel jLabelOpcaoIndex;
    private javax.swing.JLabel jLabelOpcaoPermissao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelFuncao;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JTextField jTexFnaoCluster;
    private javax.swing.JTextField jTextFcluster;
    private javax.swing.JTextField jTextFillFactor;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
